apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
  labels:
    run: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"     
    app: "{{ .Release.Name }}"
  namespace: default
  #resourceVersion: "100"
  #selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/example
  #uid: fd03ac95-a84b-11e7-a417-0800277e13b3
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      #creationTimestamp: null
      labels:
        app: "{{ .Release.Name }}"
        run: "{{ .Release.Name }}"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
  #selector:
  #  matchLabels:
  #    run: "{{ .Release.Name }}"
  #strategy:
  #  rollingUpdate:
  #    maxSurge: 1
  #    maxUnavailable: 1
    type: RollingUpdate
    spec:
      #{{- if .Values.nginxauth.pullSecret }}    
      #      imagePullSecrets:
      #        - name: "{{ .Values.nginxauth.pullSecret }}"
      #{{- end }}          
      containers:
      - name: {{ .Values.nginxauth.name }}
        image: {{ .Values.nginxauth.registry }}/{{ .Values.nginxauth.repository }}:{{ .Values.nginxauth.tag }}
        imagePullPolicy: {{ .Values.nginxauth.pullPolicy }}
        resources: {}
        #terminationMessagePath: /dev/termination-log
        #terminationMessagePolicy: File
        ports:
        - containerPort: 80
        - containerPort: 443
        - containerPort: 1935

        #dnsPolicy: ClusterFirst
        #restartPolicy: Always
        #schedulerName: default-scheduler
        #securityContext: {}
        #terminationGracePeriodSeconds: 30

        volumeMounts:
        - mountPath: /smileserv/vhosts
          name: vhosts
        - mountPath: /usr/local/nginx/logs
          name: logs
        - mountPath: /smileserv/pub-html
          name: pub-html
   
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo nameserver 10.96.0.10 > /etc/resolv.conf && echo search default.svc.cluster.local svc.cluster.local cluster.local >> /etc/resolv.conf && echo options ndots:2 >> /etc/resolv.conf && rm -rf /smileserv/scripts && /usr/bin/git clone https://github.com/smileserv/scripts /smileserv/scripts && chmod -R 700 /smileserv/scripts && sh /smileserv/scripts/init_auth.sh"]
              #command: ["/bin/sh", "-c", "echo nameserver 10.96.0.10 > /etc/resolv.conf && echo search default.svc.cluster.local svc.cluster.local cluster.local >> /etc/resolv.conf && echo options ndots:2 >> /etc/resolv.conf && mkdir -p /smileserv/scripts && usr/bin/wget wget.smilecst.com/scripts/init_auth.sh -O /smileserv/scripts/init_auth.sh && chmod 700 /smileserv/scripts/init_auth.sh && /smileserv/scripts/init_auth.sh"]
          #preStop:
          #  exec:
          #    command: ["exit"]
        livenessProbe:
          httpGet:
            path: /
            port: 80
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          initialDelaySeconds: 40
          periodSeconds: 5 

        readinessProbe:
          httpGet:
            path: /
            port: 80
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 2
          initialDelaySeconds: 15
          periodSeconds: 5 

      - name: {{ .Values.phpfpm.name }}
        image: {{ .Values.phpfpm.registry }}/{{ .Values.phpfpm.repository }}:{{ .Values.phpfpm.tag }}
        imagePullPolicy: {{ .Values.phpfpm.pullPolicy }}

        resources: {}
        ports:
        - containerPort: 9000

        volumeMounts:
        - mountPath: /smileserv/pub-html
          name: pub-html

      volumes:
      - name: vhosts
        configMap:
          name: vhosts
          #items:
          #  - key: source.conf
          #    path: source.conf

      - name: logs
        emptyDir: {}

        #hostPath:
          #path: /smileserv/pub

      - name: pub-html
        emptyDir: {}

